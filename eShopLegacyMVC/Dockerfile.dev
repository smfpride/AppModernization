# DEVELOPMENT DOCKERFILE FOR LINUX ENVIRONMENTS
# This is a development/testing Dockerfile for environments where Windows containers are not available
# It uses nginx to serve the static files for demonstration purposes
# For production deployment, use the main Dockerfile with Windows containers

FROM nginx:alpine

# Set working directory
WORKDIR /usr/share/nginx/html

# Copy static content (CSS, JS, Images)
COPY Content/ ./Content/
COPY Scripts/ ./Scripts/
COPY Images/ ./Images/
COPY fonts/ ./fonts/
COPY Pics/ ./Pics/
COPY favicon.ico ./

# Create a basic index.html for demonstration
RUN echo '<!DOCTYPE html>' > index.html && \
    echo '<html><head><title>eShopLegacyMVC - Container Ready</title></head>' >> index.html && \
    echo '<body><h1>eShopLegacyMVC Application</h1>' >> index.html && \
    echo '<p>This is a development container demonstrating the static assets.</p>' >> index.html && \
    echo '<p>For full .NET Framework functionality, deploy using Windows containers.</p>' >> index.html && \
    echo '<p>Static assets are properly served and ready for production Windows container deployment.</p></body></html>' >> index.html

# Configure nginx
COPY <<EOF /etc/nginx/conf.d/default.conf
server {
    listen 80;
    server_name localhost;
    root /usr/share/nginx/html;
    index index.html;
    
    location / {
        try_files \$uri \$uri/ /index.html;
    }
    
    # Serve static assets with proper caching
    location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
}
EOF

# Expose port 80
EXPOSE 80

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD wget --no-verbose --tries=1 --spider http://localhost || exit 1

# Start nginx
CMD ["nginx", "-g", "daemon off;"]